apiVersion: v1
kind: Namespace
metadata:
  name: zabbix
  labels:
    name: zabbix
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zabbix-agent
  namespace: zabbix
rules:
- verbs:
  - use
  apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  resourceNames:
  - privileged
  - hostaccess
  - hostnetwork
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zabbix-agent
  namespace: zabbix
subjects:
- kind: ServiceAccount
  name: zabbix-agent
roleRef:
  kind: Role
  name: zabbix-agent
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zabbix-agent
  namespace: zabbix
---
apiVersion: v1
kind: Service
metadata:
  name: zabbix-web
  labels:
    app: zabbix
  namespace: zabbix
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: web-http
  - port: 443
    targetPort: 8443
    name: web-https
  selector:
    name: zabbix-web
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-zabbix.dgsoft.cl"
    kubernetes.io/tls-acme: "true"
  name: zabbix.dgsoft.cl
  namespace: zabbix
spec:
  ingressClassName: nginx
  rules:
    - host: zabbix.dgsoft.cl
      http:
        paths:
          - backend:
              service:
                name: zabbix-web
                port:
                  number: 80
            path: /
            pathType: Prefix
    - host: www.zabbix.dgsoft.cl
      http:
        paths:
          - backend:
              service:
                name: zabbix-web
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
      - hosts:
          - zabbix.dgsoft.cl
          - www.zabbix.dgsoft.cl
        secretName: zabbix.dgsoft.cl-tls
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-zabbix.dgsoft.cl
  namespace: zabbix
spec:
  acme:
    email: fsantanderg@gmail.com
    privateKeySecretRef:
      name: letsencrypt-zabbix.dgsoft.cl
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
       ingress:
         class: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-server
  labels:
    app: zabbix
    tier: db
  namespace: zabbix
spec:
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql-server
  selector:
    name: mysql-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-server
  labels:
    app: zabbix
    tier: mysql-server
  namespace: zabbix
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: mysql-server
      app: zabbix
      tier: mysql-server
  template:
    metadata:
      labels:
        name: mysql-server
        app: zabbix
        tier: mysql-server
    spec:
      volumes:
       - name: zabbix-mysql-data
         persistentVolumeClaim:
          claimName: zabbix-mysql-data-claim
       - name: mysql-tls-certs
         secret:
          secretName: zabbix-mysql-server-tls-certs
      containers:
        - name: zabbix-db
          image: mysql:8.0-oracle
          args:
           - mysqld
           - --character-set-server=utf8mb4
           - --collation-server=utf8mb4_bin
           - --require-secure-transport
           - --ssl-ca=/tmp/secrets/root-ca.pem
           - --ssl-cert=/tmp/secrets/server-cert.pem
           - --ssl-key=/tmp/secrets/server-key.pem
           - --tls-version=TLSv1.2,TLSv1.3
          ports:
          - containerPort: 3306
            name: mysql
          livenessProbe:
            exec:
              command: ["bash", "-c", "mysqladmin -u root -p$MYSQL_ROOT_PASSWORD ping"]
            timeoutSeconds: 3
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            exec:
              command: ["bash", "-c", "mysql -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
          env:
          - name: MYSQL_USER
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: db-zbx-user
          - name: MYSQL_PASSWORD
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: db-zbx-pass
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: db-root-pass
          - name: MYSQL_DATABASE
            value: "zabbix"
          volumeMounts:
           - mountPath: "/var/lib/mysql"
             name: zabbix-mysql-data
             readOnly: false
           - mountPath: "/tmp/secrets"
             name: mysql-tls-certs
             readOnly: true
          securityContext:
            capabilities: {}
            privileged: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-server
  labels:
    app: zabbix
    tier: server
    environment: dev
  namespace: zabbix
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: zabbix-server
      app: zabbix
  template:
    metadata:
      labels:
        name: zabbix-server
        app: zabbix
    spec:
      volumes:
       - name: zabbix-snmptraps
         emptyDir: {}
       - name: mysql-tls-certs
         secret:
           secretName: zabbix-mysql-client-tls-certs
      containers:
        - name: zabbix-server
          image: zabbix/zabbix-server-mysql:alpine-7.0-latest
          ports:
          - containerPort: 10051
            protocol: TCP
            name: zabbix-trapper
          readinessProbe:
            tcpSocket:
              port: zabbix-trapper
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: zabbix-trapper
            initialDelaySeconds: 15
            periodSeconds: 20
          env:
          - name: MYSQL_USER
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: db-zbx-user
          - name: MYSQL_PASSWORD
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: db-zbx-pass
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
             secretKeyRef:
              name: db-secret
              key: db-root-pass
          - name: MYSQL_DATABASE
            value: "zabbix"
          - name: ZBX_DBTLSCONNECT
            value: "required"
          - name: ZBX_DBTLSCAFILE
            value: "/tmp/secrets/root-ca.pem"
          - name: ZBX_DBTLSCERTFILE
            value: "/tmp/secrets/client-cert.pem"
          - name: ZBX_DBTLSKEYFILE
            value: "/tmp/secrets/client-key.pem"
          volumeMounts:
          - name: zabbix-snmptraps
            mountPath: "/var/lib/zabbix/snmptraps"
            readOnly: true
          - mountPath: "/tmp/secrets"
            name: mysql-tls-certs
            readOnly: true
        - name: zabbix-snmptraps
          image: zabbix/zabbix-snmptraps:alpine-7.0-latest
          ports:
          - containerPort: 1162
            protocol: UDP
            name: snmp-trap
          volumeMounts:
          - name: zabbix-snmptraps
            mountPath: /var/lib/zabbix/snmptraps/
            readOnly: false
          securityContext:
            privileged: false
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zabbix-agent
  labels:
    app: zabbix
    tier: agent
  namespace: zabbix
spec:
  selector:
   matchLabels:
    name: zabbix-agent
  updateStrategy:
   type: RollingUpdate
   rollingUpdate:
    maxUnavailable: 1
  template:
    metadata:
      labels:
        name: zabbix-agent
        app: zabbix
    spec:
      hostNetwork: true
      hostIPC: true
      hostPID: true
      serviceAccountName: zabbix-agent
      containers:
        - name: zabbix-agent
          image: zabbix/zabbix-agent:alpine-7.0-latest
          ports:
          - containerPort: 10050
            name: zabbix-agent
          livenessProbe:
            tcpSocket:
              port: 10050
            initialDelaySeconds: 5
            failureThreshold: 3
            periodSeconds: 2
          env:
            - name: ZBX_SERVER_HOST
              value: "zabbix-server"
            - name: ZBX_PASSIVE_ALLOW
              value: "true"
            - name: ZBX_ACTIVE_ALLOW
              value: "true"
          securityContext:
            privileged: true
          volumeMounts:
            - name: dev-volume
              mountPath: /node/dev
            - name: procfs-volume
              mountPath: /node/proc
      volumes:
        - name: dev-volume
          hostPath:
            path: /dev
            type: ''
        - name: procfs-volume
          hostPath:
            path: /proc
            type: ''
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zabbix-mysql-data-claim
  namespace: zabbix
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: 10Gi
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: zabbix-web
  namespace: zabbix
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: zabbix-web
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 85
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zabbix-mysql-data-claim
  namespace: zabbix
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc  # Cambia esto si usas otra clase de almacenamiento
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-server
  namespace: zabbix
  labels:
    app: zabbix
    tier: db
spec:
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql
  selector:
    app: zabbix
    tier: mysql-server
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-server
  namespace: zabbix
  labels:
    app: zabbix
    tier: mysql-server
spec:
  selector:
    matchLabels:
      app: zabbix
      tier: mysql-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: zabbix
        tier: mysql-server
    spec:
      volumes:
        - name: zabbix-mysql-data
          persistentVolumeClaim:
            claimName: zabbix-mysql-data-claim
        - name: mysql-tls-certs
          secret:
            secretName: zabbix-mysql-server-tls-certs  # Asegúrate de que este Secret esté creado
      containers:
      - name: mysql
        image: mysql:8.0-oracle
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-root-pass
        - name: MYSQL_DATABASE
          value: "zabbix"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-zbx-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: db-zbx-pass
        args:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_bin
        - --require-secure-transport=ON
        - --ssl-ca=/tmp/secrets/root-ca.pem
        - --ssl-cert=/tmp/secrets/server-cert.pem
        - --ssl-key=/tmp/secrets/server-key.pem
        - --tls-version=TLSv1.2,TLSv1.3
        volumeMounts:
        - name: zabbix-mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-tls-certs
          mountPath: /tmp/secrets
          readOnly: true
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "500Mi"
            cpu: "250m"
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "localhost"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "localhost"]
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
